#!/usr/bin/env python
PACKAGE = "local_navigation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#weight K
gen.add("K1", double_t, 0, "Evaluation parameter k_g", 5, 0, 10)
gen.add("K2", double_t, 0, "Evaluation parameter k_curAngle", 1, 0, 10)
gen.add("K3", double_t, 0, "Evaluation parameter k_prevAngle", 1, 0, 10)
#eta
gen.add("EtaG", double_t, 0, "Cost function parameter eta_g", 1, 0, 100)
gen.add("EtaCurAngle", double_t, 0, "Cost function parameter eta_curAngle", 1, 0, 100)
gen.add("EtaPrevAngle", double_t, 0, "Cost function parameter eta_prevAngle", 1, 0, 100)
#
gen.add("minAngle", double_t, 0, "Debug histgram output: min angle deg", 45, 0, 90)
gen.add("maxAngle", double_t, 0, "Debug histgram output: max angle deg", 135, 90, 180)
gen.add("divAngle", double_t, 0, "Debug histgram output: div angle deg", 1, 0.01, 90)
gen.add("distanceThreshold", double_t, 0, "Debug histgram output: debugMarginRadius", 1.0, 0.1, 5.0)
gen.add("marginRadius", double_t, 0, "Debug histgram output: debugMarginRadius", 0.2, 0.1, 1)
#
gen.add("robotRadius", double_t, 0, "Debug cross point parameter RobotRadius", 0.3145, 0.1, 1)
gen.add("robotSteerRadius", double_t, 0, "Debug cross point parameter RobotRadius", 0.3145, 0.1, 1)
gen.add("gain_p", double_t, 0, "Debug cross point parameter RobotRadius", 0.01, 0.001, 1)
gen.add("default_vel", double_t, 0, "Debug cross point parameter RobotRadius", 0.2, 0.001, 0.6)
#
exit(gen.generate(PACKAGE, "local_navigation", "vfh_tdt"))