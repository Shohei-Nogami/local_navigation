#!/usr/bin/env python
PACKAGE = "local_navigation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#
gen.add("Kcp", double_t, 0, "Evaluation parameter k_cp", 0.5, 0, 1)
gen.add("Ko", double_t, 0, "Evaluation parameter k_o", 0.5, 0, 1)
gen.add("Kg", double_t, 0, "Evaluation parameter k_g", 0.5, 0, 1)
gen.add("Ktheta", double_t, 0, "Evaluation parameter k_theta", 0.5, 0, 1)
gen.add("Komega", double_t, 0, "Evaluation parameter k_omega", 0.5, 0, 1)
#
gen.add("EtaCp", double_t, 0, "Cost function parameter eta_cp", 0.5, 0, 1)
gen.add("EtaO", double_t, 0, "Cost function parameter eta_o", 0.5, 0, 1)
gen.add("EtaG", double_t, 0, "Cost function parameter eta_g", 0.5, 0, 1)
gen.add("EtaTheta", double_t, 0, "Cost function parameter eta_theta", 0.5, 0, 1)
gen.add("EtaOmega", double_t, 0, "Cost function parameter eta_omega", 0.5, 0, 1)
#
size_enum = gen.enum([ gen.const("None", int_t, 0, "A small constant"),
                  gen.const("debug1", int_t, 1, "A medium constant"),
                  gen.const("debug2", int_t, 2, "A large constant")],
                  "An enum to set size")
gen.add("debugType", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 2, edit_method=size_enum)
#cross point cheker
gen.add("crossPointCheckerFlag", bool_t, 0, "Debug cross point parameter crossPointCheckerFlag", False)
# gen.add("debugEncoderVel_r", double_t, 0, "Debug cross point parameter encoderVel_r", 0, -1, 1)
# gen.add("debugEncoderVel_l", double_t, 0, "Debug cross point parameter encoderVel_l", 0, -1, 1)
gen.add("debugCmd_vel", double_t, 0, "Debug cross point parameter cmd_vel", 0, -1, 1)
gen.add("debugCmd_angle", double_t, 0, "Debug cross point parameter cmd_angle", 1.57, 0, 3.14)
gen.add("debugIndexRef", int_t, 0, "Debug cross point parameter IndexRef", 0, 0, 10)
gen.add("debugGpRef_x", double_t, 0, "Debug cross point parameter gpRef_x", 0, -4.0, 4.0)
gen.add("debugGpRef_y", double_t, 0, "Debug cross point parameter gpRef_y", 0, -4.0, 4.0)
gen.add("debugGpRef_z", double_t, 0, "Debug cross point parameter gpRef_z", 0, -4.0, 4.0)
gen.add("debugTwistRefLinear_x", double_t, 0, "Debug cross point parameter TwistRefLinear_x", 0, -1.0, 1.0)
gen.add("debugTwistRefLinear_y", double_t, 0, "Debug cross point parameter TwistRefLinear_y", 0, -1.0, 1.0)
# gen.add("debugTwistRefLinear_z", double_t, 0, "Debug cross point parameter TwistRefLinear_z", 0, -1.0, 1.0)
gen.add("debugTwistRefAngular_theta", double_t, 0, "Debug cross point parameter TwistRefAngular_theta", 0, -3.14, 3.14)
gen.add("debugObstacleRadius", double_t, 0, "Debug cross point parameter ObstacleRadius", 0.2, 0.1, 1)
gen.add("debugRobotRadius", double_t, 0, "Debug cross point parameter RobotRadius", 0.2, 0.1, 1)

exit(gen.generate(PACKAGE, "local_navigation", "obstacleAvoidance"))